// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())

  devices   Device[]
  sensors   Sensor[]

  // back-relations
  rules   Rule[]  @relation("OrgRules")
  alerts  Alert[] @relation("OrgAlerts")
}

model Device {
  id             String        @id @default(cuid())
  organizationId String
  organization   Organization  @relation(fields: [organizationId], references: [id])

  monnitId   String   @unique
  name       String?
  lastSeenAt DateTime?
  createdAt  DateTime @default(now())

  sensors Sensor[]

  @@index([organizationId])
  @@index([monnitId])
}

model Sensor {
  id             String        @id @default(cuid())
  organizationId String
  organization   Organization  @relation(fields: [organizationId], references: [id])

  deviceId String
  device   Device @relation(fields: [deviceId], references: [id])

  monnitId String  @unique
  name     String?
  type     String
  unit     String?

  readings  Reading[]
  createdAt DateTime @default(now())

  // back-relations
  rules  Rule[]  @relation("SensorRules")
  alerts Alert[] @relation("SensorAlerts")

  @@index([organizationId])
  @@index([deviceId])
  @@index([monnitId])
}

model Reading {
  id       String   @id @default(cuid())
  sensorId String
  sensor   Sensor   @relation(fields: [sensorId], references: [id])

  ts    DateTime
  value Decimal

  @@index([sensorId, ts])
  @@index([ts])
}

model Rule {
  id             String        @id @default(cuid())
  organizationId String
  organization   Organization  @relation(name: "OrgRules", fields: [organizationId], references: [id])

  sensorId   String?
  sensor     Sensor?   @relation(name: "SensorRules", fields: [sensorId], references: [id])

  comparison String
  threshold  Decimal
  createdAt  DateTime @default(now())

  @@index([organizationId])
  @@index([sensorId])
}

model Alert {
  id             String        @id @default(cuid())
  organizationId String
  organization   Organization  @relation(name: "OrgAlerts", fields: [organizationId], references: [id])

  sensorId    String?
  sensor      Sensor?  @relation(name: "SensorAlerts", fields: [sensorId], references: [id])

  triggeredAt DateTime @default(now())
  value       Decimal
  message     String?

  @@index([organizationId])
  @@index([sensorId])
  @@index([triggeredAt])
}
